@model UserMVC.Models.Login
@{
    ViewData["Title"] = "LogIn";
}
<div class="row justify-content-center">
    <div class="col-md-4">
        <div class="row">
            @if (ViewData["error"] != null)
            {
                <label class="error">@ViewData["error"]</label>
            }
        </div>
    </div>
</div>
<form asp-action="Validation">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    
        <div class="row justify-content-center">
            <div class="col-md-4">
                <div class="form-check">
                    @Html.LabelFor(m => m.username)
                </div>
                </div>
                <div class="col-md-4">
                    <div class="form-check">
                        <input asp-for="username" class="form-control" />
                        <span asp-validation-for="username" class="text-danger"></span>
                    </div>
                </div>
        </div>
   
        <div class="row justify-content-center">
            <div class="col-md-4">
                <div class="form-check">
                    <label> @Html.LabelFor(m => m.password)</label>
                </div>
                </div>
            <div class="col-md-4">
                <div class="form-check">
                    <input asp-for="password" class="form-control" type="password" />
                    <span asp-validation-for="password" class="text-danger"></span>
                </div>
            </div>
        </div>
    
        <div class="row justify-content-center">
            <div class="col-md-3">
                <div class="form-check">
                    <input type="submit" value="Login" class="btn btn-primary" />
                </div>
            </div>
    </div>
</form>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
